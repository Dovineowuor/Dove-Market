{"ast":null,"code":"import{Routes,Route,useNavigationType,useLocation}from\"react-router-dom\";import SignInPage from\"./pages/SignInPage\";import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var action=useNavigationType();var location=useLocation();var pathname=location.pathname;useEffect(function(){if(action!==\"POP\"){window.scrollTo(0,0);}},[action]);useEffect(function(){var title=\"\";var metaDescription=\"\";//TODO: Update meta titles and descriptions below\nswitch(pathname){case\"/\":title=\"\";metaDescription=\"\";break;}if(title){document.title=title;}if(metaDescription){var metaDescriptionTag=document.querySelector('head > meta[name=\"description\"]');if(metaDescriptionTag){metaDescriptionTag.content=metaDescription;}}},[pathname]);return/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(SignInPage,{})})});}export default App;","map":{"version":3,"names":["Routes","Route","useNavigationType","useLocation","SignInPage","useEffect","App","action","location","pathname","window","scrollTo","title","metaDescription","document","metaDescriptionTag","querySelector","content"],"sources":["/workspaces/Dove-Market/src/App.js"],"sourcesContent":["import {\n  Routes,\n  Route,\n  useNavigationType,\n  useLocation,\n} from \"react-router-dom\";\nimport SignInPage from \"./pages/SignInPage\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action]);\n\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n\n    //TODO: Update meta titles and descriptions below\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n\n    if (title) {\n      document.title = title;\n    }\n\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector(\n        'head > meta[name=\"description\"]'\n      );\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<SignInPage />} />\n    </Routes>\n  );\n}\nexport default App;\n"],"mappings":"AAAA,OACEA,MAAM,CACNC,KAAK,CACLC,iBAAiB,CACjBC,WAAW,KACN,kBAAkB,CACzB,MAAOC,WAAU,KAAM,oBAAoB,CAC3C,OAASC,SAAS,KAAQ,OAAO,CAAC,2CAElC,QAASC,IAAG,EAAG,CACb,GAAMC,OAAM,CAAGL,iBAAiB,EAAE,CAClC,GAAMM,SAAQ,CAAGL,WAAW,EAAE,CAC9B,GAAMM,SAAQ,CAAGD,QAAQ,CAACC,QAAQ,CAElCJ,SAAS,CAAC,UAAM,CACd,GAAIE,MAAM,GAAK,KAAK,CAAE,CACpBG,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAC,CACvB,CACF,CAAC,CAAE,CAACJ,MAAM,CAAC,CAAC,CAEZF,SAAS,CAAC,UAAM,CACd,GAAIO,MAAK,CAAG,EAAE,CACd,GAAIC,gBAAe,CAAG,EAAE,CAExB;AACA,OAAQJ,QAAQ,EACd,IAAK,GAAG,CACNG,KAAK,CAAG,EAAE,CACVC,eAAe,CAAG,EAAE,CACpB,MAAM,CAGV,GAAID,KAAK,CAAE,CACTE,QAAQ,CAACF,KAAK,CAAGA,KAAK,CACxB,CAEA,GAAIC,eAAe,CAAE,CACnB,GAAME,mBAAkB,CAAGD,QAAQ,CAACE,aAAa,CAC/C,iCAAiC,CAClC,CACD,GAAID,kBAAkB,CAAE,CACtBA,kBAAkB,CAACE,OAAO,CAAGJ,eAAe,CAC9C,CACF,CACF,CAAC,CAAE,CAACJ,QAAQ,CAAC,CAAC,CAEd,mBACE,KAAC,MAAM,wBACL,KAAC,KAAK,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,cAAE,KAAC,UAAU,IAAI,EAAG,EACpC,CAEb,CACA,cAAeH,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}